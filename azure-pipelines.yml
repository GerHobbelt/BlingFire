trigger:
- master

pool:
  vmImage: windows-latest

steps:
- task: CmdLine@2
  displayName: Create release folder for win-x64
  inputs:
    script: |
      mkdir Release-win-x64

- task: CMake@1
  displayName: 'CMake for win-x64'
  inputs:
    workingDirectory: 'Release-win-x64'
    cmakeArgs: '..'

- task: MSBuild@1
  displayName: 'Build for win-x64'
  inputs:
    solution: 'Release-win-x64/BLING_FIRE.sln'
    configuration: 'Release'

- task: CopyFiles@2
  displayName: 'Copy win-x64 blingfiretokdll.dll to nuget runtime'
  inputs:
    SourceFolder: 'Release-win-x64/Release'
    Contents: 'blingfiretokdll.dll'
    TargetFolder: 'nuget/lib/runtimes/win-x64/native'
    OverWrite: true

- task: CmdLine@2
  displayName: Create release folder for win-arm64
  inputs:
    script: |
      mkdir Release-win-arm64

- task: CMake@1
  displayName: 'CMake for win-arm64'
  inputs:
    workingDirectory: 'Release-win-arm64'
    cmakeArgs: '-A ARM64 ..'

- task: MSBuild@1
  displayName: 'Build for win-arm64'
  inputs:
    solution: 'Release-win-arm64/BLING_FIRE.sln'
    configuration: 'Release'

- task: CopyFiles@2
  displayName: 'Copy win-arm64 blingfiretokdll.dll to nuget runtime'
  inputs:
    SourceFolder: 'Release-win-arm64/Release'
    Contents: 'blingfiretokdll.dll'
    TargetFolder: 'nuget/lib/runtimes/win-arm64/native'
    OverWrite: true

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'nuget/lib/BlingFireNuget.csproj'
    arguments: '--configuration Release'
    workingDirectory: '/nuget/'

- task: CopyFiles@2
  displayName: 'Copy blingFire Nuget package to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: 'nuget/lib/bin/Release/'
    Contents: '*.nupkg'
    TargetFolder: '$(build.artifactstagingdirectory)\nupkg'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: nupkg'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\nupkg'
    ArtifactName: nupkg


